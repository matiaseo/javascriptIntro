html,
body {
    --mainFontColor: #abc;
    width: 100%;
    height: 100%;
    overflow-x: hidden;
    margin: 0;
    background: #123;
    color: var(--mainFontColor);
    font-family: monospace;
}

html {
    overflow: hidden;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    list-style: none;
}

figcaption {
    position: absolute;
    top: 4px;
    left: 0;
    width: var(--imageWidth);
    padding: 2px;
    font-weight: bolder;
    backdrop-filter: brightness(0.3);
}
figcaption::first-letter {
    text-transform: capitalize;
}

figure,
.catImage {
    position: relative;
}
figure {
    width: var(--imageWidth);
}
.duppedImage {
    position: absolute;
    top: 0;
    left: 0;
    filter: blur(8px);
    /* opacity: .8; */
}
.adoptedContainer {
    overflow: hidden;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
.adopted {
    position: absolute;
    right: -19px;
    top: 10px;
    background: #2ff19aad;
    padding: 2px 16px;
    color: #1a073c;
    font-weight: bold;
    font-size: .8em;
    transform: rotate(40deg);
}

.resultContainer {
    display: flex;
    flex-direction: column;
    /* gap: 32px; */
}

.stepResultSectionContainer {
    box-shadow: 0 2px 2px 0 #abca inset;
    display: flex;
    flex-direction: column;
    gap: 8px;
}
.stepResultTitle {
    position: relative;
    font-size: 1.5em;
    backdrop-filter: hue-rotate(45deg);
    padding: 4px 8px;
}
.stepResultListContainer {
    grid-template: repeat(1, 1fr) / repeat(4, 1fr);
    display: grid;
    gap: 16px;
    padding: 16px 0;
    justify-items: center;
    position: relative;
}

.stepResultListContainer.loading {
    filter: saturate(0.1) blur(1px);
    pointer-events: none;
}
.stepResultListContainer.loading::after {
    position: absolute;
    width: 4px;
    height: 2px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: block;
    content: "";
    border: 32px transparent solid;
    border-top: #dbf 32px solid;
    border-bottom: #dbf 32px solid;
    border-radius: 16px;
    animation: spin .7s ease-in-out infinite;
}

.catCard {
    pointer-events: none;
    --cardShadowColor: #456;
    --cardColor: #4564;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    box-shadow: 0 0 4px 1px inset var(--cardShadowColor);
    background: var(--cardColor);
    padding: 8px;
    gap: 2px;
    width: 142px;
    height: 100%;
    min-height: 40px;
    transition: all .15s ease-out;
    perspective: 64px;
}

.catCardContainer {
    padding: 16px;
    display: flex;
    justify-content: center;
}

.catCardContainer:hover .catCard {
    transform: scale(1.1) rotateX(var(--rotateX)) rotateY(var(--rotateY));
    filter: brightness(var(--brightness))
}

.traitsContainer {
    display: flex;
    gap: 4px;
    flex-wrap: wrap;
}
.quietTraitPill,
.annoyingTraitPill {
    border-radius: 8px;
    padding: 2px 4px;
}
.quietTraitPill {
    background: #3866;
    border: #386 solid 1px;
}
.annoyingTraitPill {
    background: #b246;
    border: #b24 solid 1px;
}

.noContent {
    padding: 0 8px;
    display: flex;
    flex-direction: column;
}
.noContent span:first-child {
    order: -1;
}
.noContent::before {
    content: "";
    background-image: url(./noContent.png);
    background-size: cover;
    display: block;
    width: 128px;
    height: 102px;
}

.textResult {
    font-size: 2em;
    font-weight: bolder;
    padding: 0 32px;
}

#historyToggler {
    display: none
}
.historyTogglerLabel::before {
    content: "<";
    transition: transform .2s ease-in-out;
}
#historyToggler:checked ~ .historyTogglerLabel::before {
    transform: scaleX(-1);
}
.historyTogglerLabel {
    position: fixed;
    top: 0;
    right: 16px;
    backdrop-filter: grayscale(1);
    padding: 0 8px;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 2px 0 2px 0px inset;
    font-size: 2em;
    font-weight: bolder;
}

.currentContainer {
    flex-grow: 1;
}
#historyToggler:checked ~ .stepResultSectionContainer .stepResultListContainer {
    grid-template-columns: repeat(3, 1fr);
}

.previousContainer.animated {
    transition: transform .2s ease-in-out, max-width .2s ease-in-out, max-height .2s ease-in;
}
.previousContainer {
    transform: translateX(100%) scaleX(0);
    flex-shrink: 1;
    flex-grow: 1;
    max-width: 0;
    max-height: 0;
    filter: saturate(.5);
    backdrop-filter: sepia(.1);
}
#historyToggler:checked ~ .stepResultSectionContainer .previousContainer {
    transform: translateX(0) scaleX(1);
    max-width: 50vw;
    max-height: 100%;
}

.previousContainer::before {
    content: "";
    height: calc(100% - 4px);
    width: 0px;
    filter: blur(2px);
    position: absolute;
    left: -4px;
    top: -2px;
    border: #81c dotted 4px;
    border-style: dotted;
    border-radius: 50%;
}

.stepResultMainContainer {
    display: flex;
    justify-content: stretch;
    padding: 0 0 16px 0;
}


.contextMenuContainer {
    position: fixed;
    width: 100%;
    height: 100%;
    --bgColour: #1235;
    animation: fadeInBgColour .2s ease-in forwards;
}
.contextMenuButton {
    cursor: pointer;
    position: fixed;
    left: min(var(--menuX), calc(100vw - 565px));
    top: var(--menuY);
    font-weight: bolder;
    font-size: 1.5em;
    display: block;
    padding: 16px 32px;
    box-shadow: 0 0 8px 0px #e06 inset;
    border-radius: 4px;
    animation: backdropHueRotation 3s linear infinite;
    transition: background-color .2s ease-in-out, box-shadow .2s ease-in-out;
    background-color: #0002;
}
.contextMenuButton:hover {
    box-shadow: 0 0 8px 0px #e06 inset, 0 0 8px 2px #abc;
    background-color: #0007;
    animation: backdropHueRotation .5s linear infinite;
}

ul:nth-of-type(odd) > .stepResultTitle::before {
    content: "";
    position: absolute;
    width: 100vw;
    height: 128px;
    background: #a2a;
    filter: blur(256px);
    transform: translate(-50%, -75%);
    animation: blurMotion 6s alternate infinite cubic-bezier(.5,0,0,1);
    opacity: .75;
}

@keyframes blurMotion {
    25% { transform: translate(-50%, -75%); }
    to { transform: translate(25%, 0); }
}
@keyframes backdropHueRotation {
    from { backdrop-filter: blur(4px) hue-rotate(0deg) }
    to { backdrop-filter: blur(4px) hue-rotate(360deg) }
}
@keyframes fadeInBgColour {
    from { background-color: #0000 }
    to { background-color: var(--bgColour) }
}
@keyframes spin {
    from { transform: translate(-50%, -50%) rotate(0) }
    to { transform: translate(-50%, -50%) rotate(180deg) }
}
